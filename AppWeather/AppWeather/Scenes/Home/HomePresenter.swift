//
//  HomePresenter.swift
//  AppWeather
//
//  Created by Johnson-Riche Louis on 26/01/2020.
//  Copyright (c) 2020 Johnson-Richie Louis. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol HomePresentationLogic {
    func presentFetchedContents(response: Home.FetchContents.Response)
    func presentFetchedContentsError(response: Home.FetchContentsError.Response)
}

class HomePresenter {
    weak var viewController: HomeDisplayLogic?
}

// MARK: - HomePresentationLogic

extension HomePresenter: HomePresentationLogic {

	func presentFetchedContents(response: Home.FetchContents.Response) {
        let days = response.days.map {
			Home.FetchContents.ViewModel.Days(name: $0.date.isToday ? L10n.Home.today : $0.date.dayAsString,
                                              max: String(format: "%.0f", $0.maxTemperature),
                                              min: String(format: "%.0f", $0.minTemperature),
											  imageUrl: $0.iconUrl)
        }
        let viewModel = Home.FetchContents.ViewModel(name: response.cityName,
                                                     description: response.description ?? "",
                                                     currentTemperature: String(format: "%.0fÂ°", response.currentTemperature ?? ""),
                                                     days: days)
        DispatchQueue.main.async { [weak self] in
            self?.viewController?.displayFetchedContents(viewModel: viewModel)
        }
    }

	func presentFetchedContentsError(response: Home.FetchContentsError.Response) {
		let viewModel = Home.FetchContentsError.ViewModel(title: L10n.Alert.title,
														  message: L10n.Alert.message,
														  actionTitle: L10n.Alert.Action.title)
        DispatchQueue.main.async { [weak self] in
            self?.viewController?.displayFetchedContentsError(viewModel: viewModel)
        }
    }
}
