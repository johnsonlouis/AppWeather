//
//  DetailsPresenter.swift
//  AppWeather
//
//  Created by Johnson-Riche Louis on 28/01/2020.
//  Copyright (c) 2020 Johnson-Richie Louis. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol DetailsPresentationLogic {
	func presentContents(response: Details.FetchContents.Response)
	func presentFetchedContentsError(response: Details.FetchContentsError.Response)
}

class DetailsPresenter {

	// MARK: - Property

	weak var viewController: DetailsDisplayLogic?
}

// MARK: - DetailsPresentationLogic

extension DetailsPresenter: DetailsPresentationLogic {

	func presentContents(response: Details.FetchContents.Response) {
		var temperatureFeels = ""
		if let temperatureFeelsFloat = response.detailInfo.temperatureFeels {
			temperatureFeels = String(format: "%.0f째", temperatureFeelsFloat)
		}
		let additionnal = [(L10n.Detail.Max.temperature.uppercased(), String(format: "%.0f째", response.detailInfo.maxTemperature)),
						   (L10n.Detail.Min.temperature.uppercased(), String(format: "%.0f째", response.detailInfo.minTemperature)),
						   (L10n.Detail.feelslike.uppercased(), temperatureFeels),
						   (L10n.Detail.pressure.uppercased(), "\(response.detailInfo.pressure) hPa"),
						   (L10n.Detail.humidity.uppercased(), "\(response.detailInfo.humidity) %"),
						   (L10n.Detail.wind.uppercased(), String(format: "%.0f km/h", response.detailInfo.windSpeed))]
		let viewModel = Details.FetchContents.ViewModel(name: response.detailInfo.name,
														description: response.detailInfo.description ?? "",
														iconUrl: response.detailInfo.icon,
														temperature: String(format: "%.0f째", response.detailInfo.temperature),
														additionnal: additionnal)
		DispatchQueue.main.async { [weak self] in
			self?.viewController?.displayContents(viewModel: viewModel)
		}
	}

	func presentFetchedContentsError(response: Details.FetchContentsError.Response) {
		let viewModel = Details.FetchContentsError.ViewModel(title: L10n.Alert.title,
														  message: L10n.Alert.message,
														  actionTitle: L10n.Alert.Action.title)
		DispatchQueue.main.async { [weak self] in
			self?.viewController?.displayFetchedContentsError(viewModel: viewModel)
		}
	}
}
